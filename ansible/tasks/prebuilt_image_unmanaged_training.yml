---

# Note: This test scenario is to Test User can use Vertex AI (VAI)
#       on VAI-Prebuilt Container Trained Custom Image Models from VAI-un-managed datasets as Follows:

# 1) Verify that user can train a Custom Image model from VAI-un-managed dataset
#    via a training pipeline with Version-Matched Google Pre-built training + serving containers

# --------------------------------------- Training a Model--------------------------------#
# Verify that user can train an prebuilt_image_unmanaged model via Vertex AI

# ------- Scenario 1 : prebuilt_image_unmanaged model already exists in respective project ---------#
- name: Get the List of existing models.
  ansible.builtin.uri:
    url: "https://{{ vertex_region }}-aiplatform.googleapis.com/v1/projects/{{ project }}/\
         locations/{{ vertex_region }}/models"
    method: GET
    headers:
      Content-Type: "application/json"
      Authorization: Bearer "{{ gcloud_auth }}"
  register: model_list

- name: get the list of existing model names
  ansible.builtin.set_fact:
    model_name_list: "{{ (model_list.json.models | map (attribute='displayName')) }}"
  when: "model_list.json is defined"

- name: get model id of existing model
  ansible.builtin.set_fact:
    model_id: "{{ model_list.json.models | json_query(query) | map('split', '/')|map(attribute=5)|list |first }}"
  vars:
    query: "[?displayName == 'prebuilt_image_unmanaged_training'].name"
  when:
    - model_name_list is defined
    - "'prebuilt_image_unmanaged_training' in model_name_list"

- name: Set status flag
  ansible.builtin.set_fact: train_prebuilt_image_unmanaged_status="Passed"
  when:
    - model_name_list is defined
    - "'prebuilt_image_unmanaged_training' in model_name_list"

- name: Log train-prebuilt_image_unmanaged-dataset API results
  ansible.builtin.script: >
    log.py "Vertex AI" "Train prebuilt_image_unmanaged Dataset" {{ train_prebuilt_image_unmanaged_status }}
    "User can train  VAI-Prebuilt Container Custom Image Models from VAI-un-managed datasets" "https://rb.gy/gyymr5"
  args:
    executable: python3
  when:
    - model_name_list is defined
    - "'prebuilt_image_unmanaged_training' in model_name_list"

# -------------Scenario 2 : prebuilt_image_unmanaged model does not exists in respective project--------#
- name: Template entity training model
  ansible.builtin.template:
    src: "{{ role_path }}/files/prebuilt_image_unmanaged_train.json.j2"
    dest: "{{ role_path }}/files/prebuilt_image_unmanaged_train.json"
    mode: 0644
  when: "(model_name_list is not defined) or ('prebuilt_image_unmanaged_training' not in model_name_list)"

- name: train a prebuilt_image_unmanaged model
  ansible.builtin.uri:
    url: "https://{{ vertex_region }}-aiplatform.googleapis.com/v1/projects/{{ project }}/\
         locations/{{ vertex_region }}/trainingPipelines"
    method: POST
    body: "{{ lookup('file','prebuilt_image_unmanaged_train.json') }}"
    body_format: json
    headers:
      Content-Type: "application/json"
      Authorization: Bearer "{{ gcloud_auth }}"
  register: train_prebuilt_image_unmanaged_response
  when: "(model_name_list is not defined) or ('prebuilt_image_unmanaged_training' not in model_name_list)"

- name: wait until prebuilt_image_unmanaged model gets trained
  ansible.builtin.uri:
    url: "https://{{ vertex_region }}-aiplatform.googleapis.com/v1/projects/{{ project }}/\
         locations/{{ vertex_region }}/\
         trainingPipelines/{{ train_prebuilt_image_unmanaged_response.json.name.split('/')[5] }}"
    method: GET
    headers:
      Content-Type: "application/json"
      Authorization: Bearer "{{ gcloud_auth }}"
  register: train_prebuilt_image_unmanaged_response1
  until: train_prebuilt_image_unmanaged_response1.json.state == "PIPELINE_STATE_SUCCEEDED"
  retries: 30
  delay: 90
  when: "(model_name_list is not defined) or ('prebuilt_image_unmanaged_training' not in model_name_list)"

- name: set model name
  ansible.builtin.set_fact:
    model_name: "{{ train_prebuilt_image_unmanaged_response.json.modelToUpload.displayName }}"
  when: "(model_name_list is not defined) or ('prebuilt_image_unmanaged_training' not in model_name_list)"

- name: Get prebuilt_image_unmanaged model information
  ansible.builtin.uri:
    url: "https://{{ vertex_region }}-aiplatform.googleapis.com/v1/projects/{{ project }}/\
         locations/{{ vertex_region }}/models?filter=display_name={{ model_name }}"
    method: GET
    headers:
      Content-Type: "application/json"
      Authorization: Bearer "{{ gcloud_auth }}"
  register: model_prebuilt_image_unmanaged_response
  when: "(model_name_list is not defined) or ('prebuilt_image_unmanaged_training' not in model_name_list)"

- name: set model ID
  ansible.builtin.set_fact:
    model_id: "{{ model_prebuilt_image_unmanaged_response.json.models.0.name.split('/')[5] }}"
  when: "(model_name_list is not defined) or ('prebuilt_image_unmanaged_training' not in model_name_list)"

- name: showing the model id
  ansible.builtin.debug:
    msg: "{{ model_id }}"
  when: "(model_name_list is not defined) or ('prebuilt_image_unmanaged_training' not in model_name_list)"

- name: Set status flag
  ansible.builtin.set_fact: train_prebuilt_image_unmanaged_status="Passed"
  when:
    - "(model_name_list is not defined) or ('prebuilt_image_unmanaged_training' not in model_name_list)"
    - train_prebuilt_image_unmanaged_response1.json.state == "PIPELINE_STATE_SUCCEEDED"

- name: Log train prebuilt_image_unmanaged-dataset API results
  ansible.builtin.script: >
    log.py "Vertex AI" "Train prebuilt_image_unmanaged Dataset" {{ train_prebuilt_image_unmanaged_status }}
    "User can train prebuilt_image_unmanaged-dataset" "https://rb.gy/gyymr5"
  args:
    executable: python3
  when: "(model_name_list is not defined) or ('prebuilt_image_unmanaged_training' not in model_name_list)"
